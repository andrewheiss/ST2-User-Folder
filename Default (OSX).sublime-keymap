[
	{ "keys": ["ctrl+shift+backquote"], "command": "show_panel", "args": {"panel": "console", "toggle": true} },

	// Kind of recreate TextMate's ctrl+shift+< command
	{ "keys": ["ctrl+shift+,"], "command": "insert_snippet", "args": { "name": "Packages/XML/long-tag.sublime-snippet" } },

	{ "keys": ["ctrl+shift+space"], "command": "auto_complete" },
	{ "keys": ["ctrl+shift+space"], "command": "replace_completion_with_auto_complete", "context":
		[
			{ "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
			{ "key": "auto_complete_visible", "operator": "equal", "operand": false },
			{ "key": "setting.tab_completion", "operator": "equal", "operand": true }
		]
	},

	// Sidebar stuff
	{ "keys": ["ctrl+t"], "command": "side_bar_new_file2" },
	{ "keys": ["f2"], "command": "side_bar_rename" },
	{ "keys": ["ctrl+alt+f"], "command": "side_bar_find_files_path_containing" },

	// ---------
	// R stuff
	// ---------
	// alt+- to insert <-
	{ "keys": ["alt+-"], "command": "insert_snippet", "args": {"name": "Packages/User/R-Assignment.sublime-snippet"}, "context":
		[
			{ "operand": "source.r", "operator": "equal", "match_all": true, "key": "selector" }
		]
	},
	
	// R REPL stuff from http://tomschenkjr.net/using-sublime-text-2-for-r/
	// Executes the entire file (build) in REPL
	{ "keys": ["super+shift+alt+r"], "command": "repl_transfer_current", "args": {"scope": "file"}, "context":
			[
				{ "operand": "source.r", "operator": "equal", "match_all": true, "key": "selector" }
			]
	}, 
	// Executes line(s) of text in REPL terminal *and* moves to the next line (because of the macro)
	//{ "keys": ["super+shift+r"], "command": "run_macro_file", "args": {"file": "Packages/User/R-send-command-move-next-line.sublime-macro"}, "context":
	{ "keys": ["super+alt+enter"], "command": "run_macro_file", "args": {"file": "Packages/User/R-send-command-move-next-line.sublime-macro"}, "context":
			[
				{ "operand": "source.r", "operator": "equal", "match_all": true, "key": "selector" }
			]
	},
	// Send selection to R.app using R Tools package
	{ "keys": ["super+enter"], "command": "send_selection" , "context":
			[
				{ "operand": "source.r", "operator": "equal", "match_all": true, "key": "selector" }
			]
	},

	// Auto-pair backticks in Markdown
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
	    [
	        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
	        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
	        { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
	        { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9`]$", "match_all": true },
	        { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.backtick", "match_all": true },
	        { "key": "selector", "operator": "equal", "operand": "text.html.markdown" }
	    ]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
	    [
	        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
	        { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
	        { "key": "selector", "operator": "equal", "operand": "text.html.markdown" }
	    ]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
	    [
	        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
	        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
	        { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
	        { "key": "selector", "operator": "equal", "operand": "text.html.markdown" }
	    ]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
	    [
	        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
	        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
	        { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
	        { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true },
	        { "key": "selector", "operator": "equal", "operand": "text.html.markdown" }
	    ]
	}
]
